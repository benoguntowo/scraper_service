name: Deploy to EKS
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1

    - name: Checkout code
      uses: actions/checkout@v3
      with:
        ref: 'nain'

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push docker image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: xxxxxxx
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

    - name: Update Deployment YAML with new image
      run: |
        sed -i "s|image: *:.*|image: 905418062164.dkr.ecr.eu-west-1.amazonaws.com/fcmb-dev-tco0001-youverify:${IMAGE_TAG}|g" kube/deployment.yaml
        cat kube/deployment.yaml
       
    - name: Sts GetCallerIdentity
      run: |
        aws sts get-caller-identity
      

  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install kubectl
      uses: azure/setup-kubectl@v2.0
      with:
        version: 'v1.24.0'
      id: install

    - name: Update kube config
      run: aws eks update-kubeconfig --name xxxxxxx
      
    - name: Deploy to EKS
      run: |
        kubectl apply -f deployment.yaml
     
